#!/usr/bin/python3

import subprocess
import sys
import argparse
import errno

from urllib import request
from urllib.error import URLError


def cookies(r):
    h = r.getheader('Set-Cookie')
    cl = h.split(';')
    cd = {}
    for e in cl:
        e = e.strip()
        if len(e) == 0:
            continue
        k, v = e.split('=')
        cd[k.strip()] = v.strip()

    return cd


parser = argparse.ArgumentParser(description='Reboot the Compal router if necessary.')

parser.add_argument('--router-ip', help='Router IP address', default='192.168.0.1')
parser.add_argument('--router-password', help='Router password', required=True)
parser.add_argument('--ping-host', action='append', help='Host to ping', required=True)

args = parser.parse_args()

ping_error = False

for h in args.ping_host:
    try:
        proc = subprocess.Popen(['/bin/ping', '-c5', h],
                                encoding='utf-8',
                                stdout=subprocess.PIPE,
                                stderr=subprocess.PIPE)
        outs, errs = proc.communicate(timeout=15)
        if outs.find('bytes from') >= 0:
            sys.exit(0)
        ping_error = True
    except subprocess.TimeoutExpired:
        continue

if not ping_error:
    sys.exit(1)

handler = request.HTTPHandler(debuglevel=0)
opener = request.build_opener(handler)

url = 'http://' + args.router_ip

try:
    r = opener.open(url + '/common_page/login.html')
except URLError as e:
    if e.errno in [errno.ENETUNREACH, errno.EHOSTUNREACH, errno.ECONNREFUSED]:
        sys.exit(1)
    else:
        raise

cd1 = cookies(r)

req2 = request.Request(url + '/xml/setter.xml',
                       data=('token=' + cd1['sessionToken'] +
                             '&fun=15&Username=NULL&Password=' +
                             args.router_password).encode('utf-8'),
                       method='POST')
req2.add_header('Cookie', 'sessionToken=' + cd1['sessionToken'])
req2.add_header('Referer', url + '/common_page/login.html')
req2.add_header('Origin', url)
req2.add_header('X-Requested-With', 'XMLHttpRequest')

r = opener.open(req2)
rs = r.read().decode('utf-8')
res = rs.split(';')

if len(res) != 2 or res[0] != 'successful':
    sys.exit(1)

sid = res[1]
cd2 = cookies(r)

req3 = request.Request(url + '/xml/setter.xml',
                       data=('token=' + cd2['sessionToken'] + '&fun=8').encode('utf-8'),
                       method='POST')
req3.add_header('Cookie', sid + '; sessionToken=' + cd2['sessionToken'])
req3.add_header('Referer', url + '/')
req3.add_header('Origin', url)
req3.add_header('X-Requested-With', 'XMLHttpRequest')

r = opener.open(req3)
